#!/usr/bin/env ruby 

require 'drydock'

# 
# 
# See:
# <tt>$ stella -h</tt>
#

#
#
STELLA_HOME = File.expand_path(File.join(File.dirname(__FILE__), '..'))
$:.unshift(File.join(STELLA_HOME, 'lib')) # Make sure our local lib is first in line

require 'stella'
require 'stella/command/get'

default :commands


global_usage "USAGE: #{$0} [global options] command [command options]"
global_option :V, :version, "Display Stella version" do; Stella.info(Stella::VERSION); exit 0; end
global_option :f, :format, "Specify the format for output files." do |v|; v; end
global_option :F, :force, "Force the command to ignore errors."
global_option :q, :quiet, "Tell Stella to be quiet (overrides verbosity level)."
global_option :v, :verbose, "Verbosity level. The more the merrier (i.e. -vvv is greater than -v)." do |v|
  @val ||= 0
  @val += 1
end

usage "USAGE: #{$0} get"
command :get do |options, argv, global_options|
  hi = gets
  puts hi
end

usage "USAGE: #{$0} commands"
command :commands do
  Stella.info("Available commands:")
  # The commands method returns a hash of Drydock::Command objects
  Stella.info commands.keys.inject([]) { |list, command| list << command.to_s }.sort.join(', ')
end